---
import Layout from '../../layouts/Layout.astro';
import { Markdown } from 'astro/components';

export async function getStaticPaths() {
  const response = await fetch('http://localhost:1337/api/courses');
  const { data: courses } = await response.json();
  
  return courses.map((course) => ({
    params: { slug: course.slug },
    props: { course },
  }));
}

const { course } = Astro.props;
---

<Layout title={course.Title}>
  <main class="container mx-auto p-4 md:p-8 max-w-3xl text-green-400">
    <article class="space-y-6">
      <header class="mb-8">
        <h1 class="text-4xl font-bold mb-2 glitch" data-text={course.Title}>{course.Title}</h1>
        {course.Author && <p class="text-xl mb-2">By <span class="font-semibold">{course.Author}</span></p>}
        <p class="text-sm">Published on: {new Date(course.publishedAt).toLocaleDateString()}</p>
      </header>
      <div class="prose prose-invert prose-green max-w-none">
        <Markdown>{course.content}</Markdown>
      </div>
    </article>
  </main>
</Layout>

<style is:global>
  body {
    background-color: #0a0a0a;
    color: #4ade80;
  }
  .prose {
    color: #4ade80;
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #4ade80;
    font-weight: bold;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
  }
  .prose h1 { font-size: 2.25rem; }
  .prose h2 { font-size: 1.875rem; }
  .prose h3 { font-size: 1.5rem; }
  .prose a {
    color: #22d3ee;
    text-decoration: underline;
  }
  .prose p {
    margin-bottom: 1em;
  }
  .prose ul, .prose ol {
    margin-left: 1.5em;
    margin-bottom: 1em;
  }
  .prose li {
    margin-bottom: 0.5em;
  }
  .prose blockquote {
    border-left: 4px solid #22d3ee;
    padding-left: 1em;
    font-style: italic;
    margin: 1em 0;
  }
  .prose code {
    background-color: #1e1e1e;
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.875em;
  }
  .prose pre {
    background-color: #1e1e1e;
    padding: 1em;
    border-radius: 0.5em;
    overflow-x: auto;
  }
  .glitch {
    position: relative;
  }
  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .glitch::before {
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    clip: rect(24px, 550px, 90px, 0);
    animation: glitch-anim 3s infinite linear alternate-reverse;
  }
  .glitch::after {
    left: -2px;
    text-shadow: -2px 0 #00fff9;
    clip: rect(85px, 550px, 140px, 0);
    animation: glitch-anim 2s infinite linear alternate-reverse;
  }
  @keyframes glitch-anim {
    0% { clip: rect(51px, 9999px, 83px, 0); }
    5% { clip: rect(76px, 9999px, 9px, 0); }
    10% { clip: rect(47px, 9999px, 26px, 0); }
    15% { clip: rect(8px, 9999px, 40px, 0); }
    20% { clip: rect(30px, 9999px, 61px, 0); }
    25% { clip: rect(62px, 9999px, 73px, 0); }
    30% { clip: rect(89px, 9999px, 95px, 0); }
    35% { clip: rect(15px, 9999px, 37px, 0); }
    40% { clip: rect(72px, 9999px, 18px, 0); }
    45% { clip: rect(94px, 9999px, 2px, 0); }
    50% { clip: rect(33px, 9999px, 58px, 0); }
    55% { clip: rect(6px, 9999px, 84px, 0); }
    60% { clip: rect(50px, 9999px, 70px, 0); }
    65% { clip: rect(23px, 9999px, 45px, 0); }
    70% { clip: rect(66px, 9999px, 31px, 0); }
    75% { clip: rect(11px, 9999px, 92px, 0); }
    80% { clip: rect(38px, 9999px, 54px, 0); }
    85% { clip: rect(82px, 9999px, 16px, 0); }
    90% { clip: rect(19px, 9999px, 78px, 0); }
    95% { clip: rect(57px, 9999px, 4px, 0); }
    100% { clip: rect(8px, 9999px, 40px, 0); }
  }
</style>